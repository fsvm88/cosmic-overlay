name: QA Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Weekly runs on Sundays at 06:00 UTC
    - cron: "0 6 * * 0"
  workflow_dispatch:

jobs:
  qa-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gentoo in Docker
        run: |
          # Create a custom Dockerfile for our QA environment
          cat > Dockerfile << 'EOF'
          FROM fsvm88/gentoo-docker-pkgdev-pkgcheck:latest

          # Get gentoo tree
          RUN emerge-webrsync

          # Ensure repository directories exist
          RUN mkdir -p /var/db/repos/cosmic-overlay

          # Gentoo main repo is preconfigured in the image; no manual configuration needed
          # Configure overlay
          RUN echo '[cosmic-overlay]' > /etc/portage/repos.conf/cosmic-overlay.conf
          RUN echo 'location = /var/db/repos/cosmic-overlay' >> /etc/portage/repos.conf/cosmic-overlay.conf
          RUN echo 'sync-type = git' >> /etc/portage/repos.conf/cosmic-overlay.conf
          RUN echo 'masters = gentoo' >> /etc/portage/repos.conf/cosmic-overlay.conf
          RUN echo 'auto-sync = no' >> /etc/portage/repos.conf/cosmic-overlay.conf

          WORKDIR /var/db/repos/cosmic-overlay
          EOF

          # Build the container
          docker build -t cosmic-qa .

      - name: Run QA checks in container
        run: |
          docker run --rm \
            -v "$PWD":/var/db/repos/cosmic-overlay \
            -w /var/db/repos/cosmic-overlay \
            cosmic-qa \
            bash -c '
              set -e
              python3 scripts/simple-qa-check.py --overlay-root . --reports-dir qa-reports
            '

      - name: Upload QA reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: qa-reports-${{ github.sha }}
          path: qa-reports/
          retention-days: 30

      - name: Comment PR with QA results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'reports/summary.md';

            try {
              if (fs.existsSync(path)) {
                const summary = fs.readFileSync(path, 'utf8');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## üîç QA Check Results\n\n${summary}\n\nüìÅ Full reports available in [workflow artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId}).`
                });
              } else {
                console.log('Summary file not found, skipping PR comment');
              }
            } catch (error) {
              console.log('Error posting PR comment:', error.message);
            }
